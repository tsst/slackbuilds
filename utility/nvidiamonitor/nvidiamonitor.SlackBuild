#!/bin/sh

# SlackBuild for nvidia-monitor

# Copyright 2014-2016  tsst <tsstefanov@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



#Set initial variables: 

CWD=$(pwd)
if [ "$TMP" = "" ]; then
  TMP=/tmp/mbuild
fi
OUTPUT=${OUTPUT:-/tmp/mbuild}

VERSION=0.4
PKG_VERSION=0.4 # the version which appears in the package name. 
ARCH=${ARCH:-i486} # the architecture on which you want to build your package   
BUILD=${BUILD:-1}
TAG=${TAG:-_tsst}

# The application's name
APP=nvidiamonitor

# The installation directory of the package (where its actual directory
# structure will be created) 
PKG=$TMP/package-$APP


if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
 elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
fi

# Delete the leftover directories if they exist (due to a previous build)
# and (re)create the packaging directory
rm -rf $PKG
mkdir -p $TMP $PKG
rm -rf $TMP/$APP
rm -rf $TMP/nvidia-monitor-master
mkdir -p $TMP/$APP

# Change to the TMP directory
cd $TMP || exit 1
 
# Extract the application source in TMP
# Note: if your application comes as a tar.bz2, you need tar -jxvf
#unzip -x $CWD/nvidia-monitor-master.zip || exit 1
tar zxvf $CWD/v$VERSION.tar.gz

# Change to the application source directory
cd nvidia-monitor-$VERSION
 
# Change ownership and permissions if necessary
# This may not be needed in some source tarballs, but it never hurts
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Install everything into the package directory, but exit if anything goes wrong
mkdir build
cd build
cmake .. -DCMAKE_INSTALL_PREFIX="$PKG/$(kde4-config --prefix)" -DCMAKE_BUILD_TYPE=Release
make
make install		# do not change this


mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

if [ -e $CWD/doinst.sh ]; then
  cat $CWD/doinst.sh > $PKG/install/doinst.sh
fi

# Build the package
cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$APP-$PKG_VERSION-$ARCH-$BUILD$TAG.tgz
